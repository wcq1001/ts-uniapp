{
  // 组件自动引入规则
  "easycom": {
    // 是否开启自动扫描
    "autoscan": true,
    // 以正则方式自定义组件匹配规则
    "custom": {
      // uni-ui 规则如下配置
      "^uni-(.*)": "@dcloudio/uni-ui/lib/uni-$1/uni-$1.vue",
      // 以 Global 开头的组件，在 components 文件夹中查找引入（需要重启服务器）
      "^Global(.*)": "@/components/Global$1.vue"
    }
  },
  "pages": [
    //pages数组中第一项表示应用启动页，参考：https://uniapp.dcloud.io/collocation/pages
    {
      "path": "pages/index/index",
      "style": {
        "navigationBarTitleText": "uni-app"
      }
    },
    {
      "path": "pages/login/login",
      "style": {
        "navigationBarTitleText": "登录"
      }
    }
  ],
  "globalStyle": {
    "navigationBarTextStyle": "black",
    "navigationBarTitleText": "uni-app",
    "navigationBarBackgroundColor": "#F8F8F8",
    "backgroundColor": "#F8F8F8"
  },
  // 分包加载规则，通过插件生成，一般在src下新创建某个功能的分包文件夹，在该分包文件夹中创建uniapp文件
  // 分包相当于将小程序分解成多个小程序，在真正进入到这个分包时才加载这一部分，因此进入分包会有一定的延迟
  "subPackages": [
    {
      // 子包的根目录
      "root": "pagesSubPackage1",
      // 页面路径和窗口表现
      "pages": [
        {
          "path": "setting/setting",
          "style": {
            "navigationBarTitleText": "设置"
          }
        }
      ]
    }
  ],
  // 分包预下载规则
  // 分包预下载表示进入某个界面时，就提前加载这个分包
  "preloadRule": {
    // 进入这个页面路由时，开始下载packages中的分包（写root根）
    "pages/index/index": {
      // 什么网络下下载分包
      "network": "all",
      // 下载那哪些分包
      "packages": ["pagesSubPackage1"]
    }
  }
}
